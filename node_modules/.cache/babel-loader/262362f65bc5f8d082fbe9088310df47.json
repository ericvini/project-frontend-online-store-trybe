{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-frontend-online-store/src/components/AddReview.js\";\nimport React, { Component } from 'react';\n\nclass AddReview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      review: {\n        email: '',\n        rating: '',\n        comment: ''\n      },\n      history: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateState = this.updateState.bind(this);\n  }\n\n  updateState(field, newValue) {\n    this.setState({\n      review: {\n        [field]: newValue\n      }\n    });\n  }\n\n  handleSubmit() {\n    this.setState(prevState => ({\n      history: [...prevState.history, prevState.review]\n    }));\n  }\n\n  render() {\n    const {\n      history\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Avalia\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"E-mail\",\n      type: \"email\",\n      required: \"true\",\n      onChange: event => this.updateState('email', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"Escreva um coment\\xE1rio (opcional)\",\n      \"data-testid\": \"product-detail-evaluation\",\n      onChange: event => this.updateState('comment', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Avalie\",\n      id: \"evaluation\",\n      type: \"number\",\n      width: \"100px\",\n      min: 1,\n      max: 5,\n      required: \"true\",\n      onChange: event => this.updateState('rating', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Avaliar\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, history.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, item.comment), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, item.rating)))));\n  }\n\n}\n\nexport default AddReview;","map":{"version":3,"sources":["/home/eric/sd-07-project-frontend-online-store/src/components/AddReview.js"],"names":["React","Component","AddReview","constructor","props","state","review","email","rating","comment","history","handleSubmit","bind","updateState","field","newValue","setState","prevState","render","event","target","value","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass AddReview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      review: {\n        email: '',\n        rating: '',\n        comment: '',\n      },\n      history: [],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateState = this.updateState.bind(this);\n  }\n\n  updateState(field, newValue) {\n    this.setState({ review: { [field]: newValue } });\n  }\n\n  handleSubmit() {\n    this.setState((prevState) => ({ history: [...prevState.history, prevState.review] }));\n  }\n\n  render() {\n    const { history } = this.state;\n    return (\n      <div>\n        <h2>Avaliação</h2>\n        <form>\n          <input\n            placeholder=\"E-mail\"\n            type=\"email\"\n            required=\"true\"\n            onChange={ (event) => this.updateState('email', event.target.value) }\n          />\n          <textarea\n            placeholder=\"Escreva um comentário (opcional)\"\n            data-testid=\"product-detail-evaluation\"\n            onChange={ (event) => this.updateState('comment', event.target.value) }\n          />\n          <input\n            placeholder=\"Avalie\"\n            id=\"evaluation\"\n            type=\"number\"\n            width=\"100px\"\n            min={ 1 }\n            max={ 5 }\n            required=\"true\"\n            onChange={ (event) => this.updateState('rating', event.target.value) }\n          />\n          <button\n            type=\"button\"\n            onClick={ this.handleSubmit }\n          >\n            Avaliar\n          </button>\n        </form>\n        <div>\n          { history.map((item) => (\n            <div key={ item.email }>\n              <p>{ item.comment }</p>\n              <p>{ item.rating }</p>\n            </div>)) }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddReview;\n"]},"metadata":{},"sourceType":"module"}