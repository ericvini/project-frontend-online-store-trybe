{"ast":null,"code":"var _jsxFileName = \"/home/eric/sd-07-project-frontend-online-store/src/components/CategoriesList.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\n\nclass CategoryList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      category: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCategory();\n  }\n\n  async fetchCategory() {\n    const category = await api.getCategories();\n    this.setState({\n      category\n    });\n  }\n\n  async filterCategory(event) {\n    const {\n      handleChange,\n      handleClick\n    } = this.props;\n    await handleChange(event);\n    handleClick(event);\n  }\n\n  render() {\n    const {\n      category\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"category-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, category.map(item => /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: item.id,\n      key: item.id,\n      className: \"category-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, item.name, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      \"data-testid\": \"category\",\n      name: \"categoryId\",\n      value: item.id,\n      onClick: event => this.filterCategory(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nCategoryList.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired\n};\nexport default CategoryList;","map":{"version":3,"sources":["/home/eric/sd-07-project-frontend-online-store/src/components/CategoriesList.js"],"names":["React","Component","PropTypes","api","CategoryList","constructor","state","category","componentDidMount","fetchCategory","getCategories","setState","filterCategory","event","handleChange","handleClick","props","render","map","item","id","name","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACnCI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL;AACD;;AAED,QAAMA,aAAN,GAAsB;AACpB,UAAMF,QAAQ,GAAG,MAAMJ,GAAG,CAACO,aAAJ,EAAvB;AACA,SAAKC,QAAL,CAAc;AAAEJ,MAAAA;AAAF,KAAd;AACD;;AAED,QAAMK,cAAN,CAAqBC,KAArB,EAA4B;AAC1B,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAAgC,KAAKC,KAA3C;AACA,UAAMF,YAAY,CAACD,KAAD,CAAlB;AACAE,IAAAA,WAAW,CAACF,KAAD,CAAX;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,QAAQ,CAACW,GAAT,CAAcC,IAAD,iBACZ;AAAO,MAAA,OAAO,EAAGA,IAAI,CAACC,EAAtB;AAA2B,MAAA,GAAG,EAAGD,IAAI,CAACC,EAAtC;AAA2C,MAAA,SAAS,EAAC,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,IADR,eAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,qBAAY,UAFd;AAGE,MAAA,IAAI,EAAC,YAHP;AAIE,MAAA,KAAK,EAAGF,IAAI,CAACC,EAJf;AAKE,MAAA,OAAO,EAAIP,KAAD,IAAW,KAAKD,cAAL,CAAoBC,KAApB,CALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD,CADH,CADF;AAgBD;;AAzCkC;;AA4CrCT,YAAY,CAACkB,SAAb,GAAyB;AACvBR,EAAAA,YAAY,EAAEZ,SAAS,CAACqB,IAAV,CAAeC,UADN;AAEvBT,EAAAA,WAAW,EAAEb,SAAS,CAACqB,IAAV,CAAeC;AAFL,CAAzB;AAKA,eAAepB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\n\nclass CategoryList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      category: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCategory();\n  }\n\n  async fetchCategory() {\n    const category = await api.getCategories();\n    this.setState({ category });\n  }\n\n  async filterCategory(event) {\n    const { handleChange, handleClick } = this.props;\n    await handleChange(event);\n    handleClick(event);\n  }\n\n  render() {\n    const { category } = this.state;\n    return (\n      <div className=\"category-list\">\n        {category.map((item) => (\n          <label htmlFor={ item.id } key={ item.id } className=\"category-item\">\n            {item.name}\n            <input\n              type=\"radio\"\n              data-testid=\"category\"\n              name=\"categoryId\"\n              value={ item.id }\n              onClick={ (event) => this.filterCategory(event) }\n            />\n          </label>\n        ))}\n      </div>\n    );\n  }\n}\n\nCategoryList.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default CategoryList;"]},"metadata":{},"sourceType":"module"}